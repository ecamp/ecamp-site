---
interface Props {
  items: {
    text?: string;
    number?: number;
    year?: boolean;
    description: string;
  }[];
}

const numFormat = new Intl.NumberFormat(Astro.params.locale + "-CH", {
  notation: "compact",
  compactDisplay: "short",
  useGrouping: true,
}).format;
const yearFormat = new Intl.NumberFormat(Astro.params.locale + "-CH", {
  style: "unit",
  unitDisplay: "long",
  unit: "year",
}).format;

const { items } = Astro.props;
---

<div
  class="px-4 py-8 md:py-16 sm:px-6 mx-auto md:px-12 lg:px-8 lg:py-20 max-w-6xl"
>
  <div
    class="grid sm:grid-cols-2 row-gap-8 gap-y-10 md:grid-cols-4 md:divide-x"
  >
    {
      items.map((stat) => (
        <div class="text-center dark:md:border-slate-500">
          <div class="text-4xl font-bold lg:text-5xl xl:text-6xl text-primary-500 font-heading">
            {stat.number
              ? stat.year
                ? yearFormat(stat.number)
                : numFormat(stat.number)
              : stat.text}
          </div>
          <p class="text-sm font-medium tracking-widest text-gray-800 dark:text-slate-400 uppercase lg:text-base">
            {stat.description}
          </p>
        </div>
      ))
    }
  </div>
</div>
